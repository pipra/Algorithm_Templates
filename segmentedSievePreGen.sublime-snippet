<snippet>
	<content><![CDATA[
vector<char> segmentedSieve(int L, int R) {
    int lim = sqrt(R);
    vector<char> mark(lim + 1, false);
    vector<int> primes;
    for (int i = 2; i <= lim; ++i) {
        if (!mark[i]) {
            primes.emplace_back(i);
            for (int j = i * i; j <= lim; j += i)
                mark[j] = true;
        }
    }

    vector<char> isPrime(R - L + 1, true);
    for (int i : primes)
        for (int j = max(i * i, (L + i - 1) / i * i); j <= R; j += i)
            isPrime[j - L] = false;
    if (L == 1)
        isPrime[0] = false;
    return isPrime;
}
/*
    vector<char> res = segmentedSieveNoPreGen(l, r);
    for(int i=0 ; i<res.size() ; i++)   if(a[i])    cout << (l + i) << ' '; cout << endl;
    TC: n loglog(R) + sqrt(R)loglogsqrt(R);  n = R - L + 1;
*/
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segmentedSievePreGen</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
