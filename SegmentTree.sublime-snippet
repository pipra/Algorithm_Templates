<snippet>
	<content><![CDATA[
const int N = 2e5 + 5;
int a[N], seg[4 * N];

void build(int ind, int b, int e) {
    if(b == e) {
        seg[ind] = a[b];
        return;
    }
    int mid = (b + e) >> 1, l = ind << 1, r = l | 1;
    build(l, b, mid);
    build(r, mid + 1, e);
    seg[ind] = min(seg[l], seg[r]);
}
void update(int ind, int b, int e, int i, int x) {
    if(b > i or e < i)  return;
    if(b == e and b == i) {
        seg[ind] = x;
        return;
    }
    int mid = (b + e) >> 1, l = ind << 1, r = l | 1;
    update(l, b, mid, i, x);
    update(r, mid + 1, e, i, x);
    seg[ind] = min(seg[l], seg[r]);
}
int query(int ind, int b, int e, int i, int j) {
    if(b > j or e < i)  return 1e9;
    if(b >= i and e <= j)   return seg[ind];
    int mid = (b + e) >> 1, l = ind << 1, r = l | 1;
    int L = query(l, b, mid, i, j);
    int R = query(r, mid + 1, e, i , j);
    return min(L, R);
} // index based on 1
// TC -> build: O(N)
//    -> query: O(logN)
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segmentTree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
